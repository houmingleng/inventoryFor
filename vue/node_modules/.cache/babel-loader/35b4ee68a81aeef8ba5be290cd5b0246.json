{"ast":null,"code":"// import axios from 'axios'\n// const mongoose = require('mongoose');\n// const Schema = mongoose.Schema;\n// let itemSchema = new Schema({\n//     name:{\n//         type : String\n//     },\n//     address:{\n//         type : String\n//     },\n//     number:{\n//         type: Number\n//     },\n//     id:{\n//       type :Object\n//     }\n//\n// })\n// const request = axios.create({\n//     baseURL: \"http://localhost:9876/api\",\n//     // headers: {\n//     //     \"Content-type\": \"application/json\"\n//     // }\n// })\n//\n//\n// request.interceptors.request.use(config=>{\n//     console.log(config)\n//     return config\n// } , err => {\n//     return Promise.reject(err)\n// });\n//\n// request.interceptors.response.use(\n//     response=> {\n//         let ress = response.data;\n//         if (response.config.responseType === 'blob') {\n//             return ress;\n//         }\n//\n//\n//         if (typeof ress === 'string') {\n//             ress = ress ? JSON.parse(ress) : ress\n//         }\n//         return ress;\n//     },\n//     err => {\n//         console.log('err'+ err)\n//         return Promise.reject(err)\n//     }\n//\n// )\n// export default request\nimport axios from \"axios\";\nexport default axios.create({\n  baseURL: \"http://localhost:9876/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["axios","create","baseURL","headers"],"sources":["/Users/alanleng/stocks/vue/src/utils/request.js"],"sourcesContent":["// import axios from 'axios'\n// const mongoose = require('mongoose');\n// const Schema = mongoose.Schema;\n// let itemSchema = new Schema({\n//     name:{\n//         type : String\n//     },\n//     address:{\n//         type : String\n//     },\n//     number:{\n//         type: Number\n//     },\n//     id:{\n//       type :Object\n//     }\n//\n// })\n// const request = axios.create({\n//     baseURL: \"http://localhost:9876/api\",\n//     // headers: {\n//     //     \"Content-type\": \"application/json\"\n//     // }\n// })\n//\n//\n// request.interceptors.request.use(config=>{\n//     console.log(config)\n//     return config\n// } , err => {\n//     return Promise.reject(err)\n// });\n//\n// request.interceptors.response.use(\n//     response=> {\n//         let ress = response.data;\n//         if (response.config.responseType === 'blob') {\n//             return ress;\n//         }\n//\n//\n//         if (typeof ress === 'string') {\n//             ress = ress ? JSON.parse(ress) : ress\n//         }\n//         return ress;\n//     },\n//     err => {\n//         console.log('err'+ err)\n//         return Promise.reject(err)\n//     }\n//\n// )\n// export default request\nimport axios from \"axios\";\nexport default axios.create({\n    baseURL: \"http://localhost:9876/api\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAeA,KAAK,CAACC,MAAN,CAAa;EACxBC,OAAO,EAAE,2BADe;EAExBC,OAAO,EAAE;IACL,gBAAgB;EADX;AAFe,CAAb,CAAf"},"metadata":{},"sourceType":"module"}